// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using moviesApp.Models;

namespace moviesApp.Migrations
{
    [DbContext(typeof(MovieCtxt))]
    partial class MovieCtxtModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("moviesApp.Models.Category", b =>
                {
                    b.Property<int>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("categoryID");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            categoryID = 1,
                            name = "Action/Adventure"
                        },
                        new
                        {
                            categoryID = 2,
                            name = "Comedy"
                        },
                        new
                        {
                            categoryID = 3,
                            name = "Drama"
                        },
                        new
                        {
                            categoryID = 4,
                            name = "Family"
                        },
                        new
                        {
                            categoryID = 5,
                            name = "Horror/Suspense"
                        },
                        new
                        {
                            categoryID = 6,
                            name = "Miscellaneous"
                        },
                        new
                        {
                            categoryID = 7,
                            name = "Television"
                        },
                        new
                        {
                            categoryID = 8,
                            name = "VHS"
                        });
                });

            modelBuilder.Entity("moviesApp.Models.Movie", b =>
                {
                    b.Property<int>("movieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<int>("ratingID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("year")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("movieID");

                    b.HasIndex("categoryID");

                    b.HasIndex("ratingID");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("moviesApp.Models.Rating", b =>
                {
                    b.Property<int>("ratingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("term")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ratingID");

                    b.ToTable("ratings");

                    b.HasData(
                        new
                        {
                            ratingID = 1,
                            term = "G"
                        },
                        new
                        {
                            ratingID = 2,
                            term = "PG"
                        },
                        new
                        {
                            ratingID = 3,
                            term = "PG-13"
                        },
                        new
                        {
                            ratingID = 4,
                            term = "R"
                        },
                        new
                        {
                            ratingID = 5,
                            term = "NR"
                        },
                        new
                        {
                            ratingID = 6,
                            term = "UR"
                        },
                        new
                        {
                            ratingID = 7,
                            term = "TV-Y7"
                        },
                        new
                        {
                            ratingID = 8,
                            term = "TV-PG"
                        },
                        new
                        {
                            ratingID = 9,
                            term = "TV-14"
                        },
                        new
                        {
                            ratingID = 10,
                            term = "TV-MA"
                        });
                });

            modelBuilder.Entity("moviesApp.Models.Movie", b =>
                {
                    b.HasOne("moviesApp.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("moviesApp.Models.Rating", "rating")
                        .WithMany()
                        .HasForeignKey("ratingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
